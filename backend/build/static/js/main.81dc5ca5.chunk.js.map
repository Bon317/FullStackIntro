{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholer","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81dc5ca5.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render() {  \r\n    return (\r\n      <div className=\"inputField\">\r\n          \r\n          <input\r\n            className='input'\r\n            type={this.props.type}\r\n            placeholer={this.props.placeholder}\r\n            value={this.props.value}\r\n            onChange={ (e) => this.props.onChange(e.target.value) }\r\n            />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render() {  \r\n    return (\r\n      <div className=\"submitButton\">\r\n          <button\r\n          className='btn'\r\n          disabled={this.props.disabled}\r\n          onClick={ () => this.props.onClick() }\r\n          >\r\n              {this.props.text}\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if(val.length > 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    if(!this.state.username) {\r\n      return;\r\n    }\r\n    if(!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true\r\n    })\r\n\r\n    try {\r\n\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if(result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n      this.resetForm();\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {  \r\n    return (\r\n      <div className=\"loginForm\">\r\n          \r\n          Log in\r\n          <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={ (val) => this.setInputValue('username', val)}\r\n            />\r\n            <InputField\r\n            type='password'\r\n            placeholder='Passwork'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={ (val) => this.setInputValue('password', val)}\r\n            />\r\n\r\n            <SubmitButton\r\n              text='Login'\r\n              disabled={this.state.buttonDisabled}\r\n              onClick={ () => this.doLogin() }\r\n              />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","\nimport UserStore from './stores/UserStore';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\n\n//class based react app\nclass App extends React.Component {\n\n  async componentDidMount() {\n\n    try{\n\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    }\n\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n\n    try{\n\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success){\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n\n    }\n\n    catch(e) {\n\n      console.log(e)\n    }\n  }\n\n  render() {  \n\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            Loading, please wait.\n          </div>\n        </div>\n      );\n    }\n    else {\n\n      if(UserStore.isLoggedIn){\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UserStore.username}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout() }\n                />\n            </div>\n          </div>\n        );\n      }\n    }\n    return (\n      <div className=\"app\">\n          <div className=\"container\">\n             <LoginForm />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}